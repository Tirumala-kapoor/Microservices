Launch MySQL as Docker Container
docker run --detach --env MYSQL_ROOT_PASSWORD=dummypassword --env MYSQL_USER=social-media-user --env MYSQL_PASSWORD=dummypassword --env MYSQL_DATABASE=social-media-database --name mysql --publish 3306:3306 mysql:8-oracle


mysqlsh commands
mysqlsh
\connect social-media-user@localhost:3306
\sql
use social-media-database
select * from user_details;
select * from post;
\quit


https://www.linkedin.com/in/tirumala-kapoor-b32b72132/



GREAT NEWS: We are re-recording this course with the new version of Spring Cloud. I expect the update to be available before the end of January 2021. I expect the update to include Docker and Kubernetes on top of what we already have!

In the meanwhile, we recommend using 2.3.1.RELEASE with Hoxton.SR5.

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
 
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR5</spring-cloud.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>
 
Ranga

DEBUGGING THE EUREKA :
https://github.com/in28minutes/spring-microservices-v2/blob/main/03.microservices/01-step-by-step-changes/microservices-v2-1.md#eureka---step-19-to-21


Debugging Problems with Eureka - V2
Debugging microservices problems can be difficult as there are multiple components involved.

Step by Step instructions is provided in the troubleshooting guide to help you troubleshoot frequently occurring problems.

Using the Chrome Browser is recommended.



COMPLETE DEBUGGING GUIDE

https://github.com/in28minutes/spring-microservices-v2/blob/main/03.microservices/01-step-by-step-changes/microservices-v2-1.md#eureka---step-19-to-21



Top Recommendation From Debugging Guide:

Give these settings a try individually in application.properties of all microservices (currency-exchange, currency-conversion) to see if they help

eureka.instance.prefer-ip-address=true
OR

eureka.instance.hostname=localhost



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

URLs for next Lecture
Some of these URLs may be complex to write by hand:

Refer back to here if you have problems in the next steps.



Initial

- http://localhost:8765/CURRENCY-EXCHANGE/currency-exchange/from/USD/to/INR

- http://localhost:8765/CURRENCY-CONVERSION/currency-conversion/from/USD/to/INR/quantity/10

- http://localhost:8765/CURRENCY-CONVERSION/currency-conversion-feign/from/USD/to/INR/quantity/10



Lower Case

- http://localhost:8765/currency-exchange/currency-exchange/from/USD/to/INR

- http://localhost:8765/currency-conversion/currency-conversion/from/USD/to/INR/quantity/10

- http://localhost:8765/currency-conversion/currency-conversion-feign/from/USD/to/INR/quantity/10



Custom Routes

- http://localhost:8765/currency-exchange/from/USD/to/INR

- http://localhost:8765/currency-conversion/from/USD/to/INR/quantity/10

- http://localhost:8765/currency-conversion-feign/from/USD/to/INR/quantity/10

- http://localhost:8765/currency-conversion-new/from/USD/to/INR/quantity/10


Debugging Problems with Spring Cloud Gateway - V2
Debugging microservices problems can be difficult as there are multiple components involved.

Step by Step instructions is provided in the troubleshooting guide to help you troubleshoot frequently occurring problems.

Using the Chrome Browser is recommended.



COMPLETE DEBUGGING GUIDE

https://github.com/in28minutes/spring-microservices-v2/blob/main/03.microservices/01-step-by-step-changes/microservices-v2-1.md#spring-cloud-api-gateway---step-22-to-step-25



TOP Recommendation from Debugging Guide:

(6) Some student reported success when using lower-case-service-id instead of spring.cloud.gateway.discovery.locator.lowerCaseServiceId. See if it helps!

spring.cloud.gateway.discovery.locator.enabled=true
 
spring.cloud.gateway.discovery.locator.lower-case-service-id=true


